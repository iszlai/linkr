/*
 * This Scala Testsuite was auto generated by running 'gradle init --type scala-library'
 * by 'lehel' at '12/23/16 2:27 PM' with Gradle 2.14
 *
 * @author lehel, @date 12/23/16 2:27 PM
 */

import com.auth0.jwt.{JWT, JWTVerifier}
import com.auth0.jwt.algorithms.Algorithm
import org.scalatest.FunSuite
import org.junit.runner.RunWith
import org.mindrot.jbcrypt.BCrypt
import org.scalatest.junit.JUnitRunner

import scala.util.Try

@RunWith(classOf[JUnitRunner])
class LibrarySuite extends FunSuite {
  test("someLibraryMethod is always true") {
    def library = new Library()

    assert(library.someLibraryMethod)
  }

  test("Bcrypt functionality") {
    val hased = BCrypt.hashpw("foo", BCrypt.gensalt())
    println(hased)
    assert(BCrypt.checkpw("foo", "$2a$10$raxDrCYD4iAebH3d1l28t.ICD7w2gYdDw939ss62c.dlW7GlhPGqK"))
  }

  test("jwt functionality") {
    val token = JWT.create()
      .withClaim("username", "lehel")
      .withIssuer("linkr")
      .sign(Algorithm.HMAC256("secret"))

    val verifier = JWT.require(Algorithm.HMAC256("secret")).withIssuer("linkr").build()
    assert(
      Try {
        verifier.verify(token)
      }.isSuccess
    )
  }


}
